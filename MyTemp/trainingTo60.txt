<?php

// multi-dimensional array:-
// $people = array
// (
//     "ALI" => array("ali", 12, "shop"),
//     "HUSSAIN" => array("hussain", 22, "resturent")
// );

// echo "<h3> This is my test array:</h3>";
// foreach ($people as $key => $person)
// {
//     echo $key . ": " . "<br>";
//     foreach($person as $info)
//     {
//         echo $info . "<br>";
//     }
//     echo "<br>";
// }

// array method :-
// * in_array
// in_array(needle, haystack, type)
// ÏÇáÉ ÊÑÌÚ ÕÍ Çã ÎØÃ 
// needle: ÇáßáãÉ ÇáĞí ÊÈÍË Úäå
// haystack: ÇÓã ÇáãßÇä ÇáĞí ÊÈÍË İíå

// type: åá íŞÇÑä ÈÇá ÂíÏäÊíßÇá Çã áÇ
// $names = array("taymoor", "ali", "yousif", 12);
// if(in_array("12", $names, false))
// {
//     echo "Yes";
// } 
// else
// {
//     echo "No";
// }

// * array_search:
// array_array(needle, haystack, type)
// ÏÇáÉ ÊÑÌÚ ÇäÏßÓ æÇĞÇ ÛíÑ ãæÌæÏ ÊÑÌÚ ŞíãÉ äíá 
// $names = array("taymoor", "ali", "yousif", 12);
// if (array_search("muhamed", $names, true))
// {
//     echo "yes";
// }
// else
// {
//     echo "no";
// }


// * array_key_exists
// array_key_exists(needle, haystack)
// needle : key
// íÊÚÇãá ãÚ ÇÓæÓííÊİ ÇÑÑí
// ÏÇáÉ ÊÑÌÚ ÕÍ Çã ÎØÃ 

// $a = array(
//     "first" => "taymoor",
//     "second" => "abdeen",
//     "last" => "qasim",
// );
// echo array_key_exists("first", $a) . "<br>";
// if (array_key_exists("first", $a))
// {
//     echo "yes";
// }
// else
// {
//     echo "no";
// }


// * array_push:
// array_push(array, value1, value2, value3)
// íÖíİ ÇáŞíã Çáì ÇÎÑ ãÕİæİÉ
// æßã ŞíãÉ äßÊÈ ÚäÏ ÇáÇÖÇİÉ ÊŞÈá
// íÊÚÇãá ãÚ ÇäÏíßÓÏ ÇÑÑí
// $names = array ("taymoor", "abdeen", "qasim",
// );
// echo "<pre> before : ";
// print_r($names);
// echo "</pre>";
// array_push($names, "sonallah");
// echo "<pre> after : ";b
// print_r($names);
// echo "</pre>";


// * array_unshift:
// array_unshift(array, value1, value2, value3)
// íÖíİ ÇáŞíã Çáì Çæá ãÕİæİÉ
// æßã ŞíãÉ äßÊÈ ÚäÏ ÇáÇÖÇİÉ ÊŞÈá
// íÊÚÇãá ãÚ ÇäÏíßÓÏ ÇÑÑí
// $names = array ("taymoor", "abdeen", "qasim");
// echo "<pre> before : ";
// print_r($names);
// echo "</pre>";
// array_unshift($names, "sonallah");
// echo "<pre> after : ";
// print_r($names);
// echo "</pre>";


// * array_pop:
// array_pop(array)
// íÍĞİ ÇÎÑ ŞíãÉ ãä ãÕİæİÉ
// ÊÑÌÚ ŞíãÉ ÚäÕÑ ãÍĞæİ íãßä ØÈÇÚÊå Çæ ÊÖÚå İí ÇáãÊÛíÑ
// $names = array ("taymoor", "abdeen", "qasim");
// echo "<pre> before : ";
// print_r($names);
// echo "</pre>";
// $item = array_pop($names);
// echo "<pre> after : ";
// print_r($names);
// echo "</pre>";

// * array_shift:
// array_shift(array);
// íÍĞİ Çæá ŞíãÉ ãä ãÕİæİÉ æÊÈÏÃ ÇäÏíßÔ ãä ÕİÑ
// ÊÑÌÚ ŞíãÉ ÚäÕÑ ãÍĞæİ íãßä ØÈÇÚÊå Çæ ÊÖÚå İí ÇáãÊÛíÑ
// $names = array ("taymoor", "abdeen", "qasim");
// echo "<pre> before : ";
// print_r($names);
// echo "</pre>";
// $item = array_shift($names);
// echo "<pre> after : ";
// print_r($names);
// echo "</pre>";

// * sort & rsort with indexed array:
// íÑÊÈ ÍÓÈ İÇáíæ æáíÓ ÇäÏíßÓ
// sort(array, type) or rsort(array, type)
// r : reverse
// type :
// * SORT_REGULER : íÑÊÈ äÕæÕ ÇæáÇ Ëã ÇáÇÑŞÇã ÈÚÏåÇ æÇĞÇ ßÇä åäÇß ÇÑŞÇã äÕí Çí Èíä ÏÈá ßæÊíÔä ßÇä íÑÊÈå ÇæáÇ æåæ ÇİÊÑÇÖíæÈßä áÇ íäßÊÈ İí ÇÓÊÏÚÇÁ ÇáÏÇáÉ
// * SORT_STRING : íÑÊÈ ÇÑŞÇã ÇæáÇ Ëã ÇáäÕæÕ áÇä ßá ÔíÁ íÊÚÇãá ãÚ ß äÕæÕ
// íÊÚÇãá ãÚ ÇäÏíßÓÏ ÇÑÑí
// ãÇ ÊÑÌÚ ÔíÁ
// $names = array ("taymoor", "2020", 2019, "abdeen", "qasim", 2018);
// sort($names); // SORT_REGULER
// echo "<pre> before : ";
// print_r($names);
// echo "</pre>";
// rsort($names, SORT_STRING);
// echo "<pre> after : ";
// print_r($names);
// echo "</pre>";
// rsort($names);
// echo "<pre> reverse : ";
// print_r($names);
// echo "</pre>";



// * asort & arsort with value in associative array:
// asort(array) : 'a' it's associative 
// íßæä ÊÑÊíÈ ÍÓÈ İÇáíæ
// $names = array (
//     "FIRST" => "taymoor",
//     "SECOD" => "2020",
//     "THIRD" => 2019,
//     "FOURTH" => "abdeen",
//     "FIVTH" => "qasim",
//     "SIXTH" => 2018
// );
// asort($names); // ÇĞÇ äßÊÈ ÓæÑÊ ÚÇÏí Çí ÈÏæä ÍÑİ Ãí íİÊåã ÇäåÇ ãÕİæİÉ ÇäÏßÓíÏ ÇÑÑí İíßæä İíåÇ ÇäÏíßÓ ãä ÕİÑ 
// echo "<pre> assosiative : ";
// print_r($names);
// echo "</pre>";


// * ksort & krsort with key in associative array:
// asort(array) : 'k' it's key 
// íßæä ÊÑÊíÈ ÍÓÈ ßíÓ
// $names = array (
//     "FIRST" => "taymoor",
//     "SECOD" => "2020",
//     "THIRD" => 2019,
//     "FOURTH" => "abdeen",á
//     "FIVTH" => "qasim",
//     "SIXTH" => 2018
// );
// ksort($names); // ÇĞÇ äßÊÈ ÓæÑÊ ÚÇÏí Çí ÈÏæä ÍÑİ Ãí íİÊåã ÇäåÇ ãÕİæİÉ ÇäÏßÓíÏ ÇÑÑí İíßæä İíåÇ ÇäÏíßÓ ãä ÕİÑ 
// echo "<pre> assosiative : ";
// print_r($names);
// echo "</pre>";



// *array_revese(array, preserve)
// preserve: ÇĞÇ ßÇä ÕÍ íÍÇİÙ Úáì ÇäÏíßÓ Çí íÈÏá ãßÇä ÇäÏíßÓ ßĞáß æÇĞÇ ßÇä ÎØÃ íÈŞì ÇäÏíßÓ ËÇÈÊ æíÊÛíÑ Şíã İÇáíæ İŞØ æåæ ÇİÊÑÇÖí Çí ÇáÎØÃ
// íÑÌÚ ÇÑÑí áÇÒã ÇäÊ ÊÓÊŞÈáå Çí ÊÖÚå ÇãÇ İí äİÓ ÇÑÑí Çã İí ÇÑÑí ÇÎÑ 
// $names = array ("taymoor", "abdeen", "qasim");
// echo "<pre>before: ";
// print_r($names);
// echo "</pre>";
// $names = array_reverse($names, false); // array_reverse($names, true);
// echo "<pre>after: ";
// print_r($names);
// echo "</pre>";


// *shuffle(array)
// íÑÊÈ ÇáÚäÇÕÑ ÚÔæÇÆíÇ İí ßá ãÑÉ Ôßá
// ãÇ ÊÑÌÚ ÔíÁ æáÇ ÊÍÇİÙ Úáì ßíÓ Çæ ÇäÏíßÓ
// $names = array ("taymoor", "abdeen", "qasim");
// echo "<pre>before: ";
// print_r($names);
// echo "</pre>";
// shuffle($names);
// echo "<pre>after: ";
// print_r($names);
// echo "</pre>";



// *array_fill(index, number, value)
// ãáÆ ÇÑÑí ÈÇáŞíã
// index: ÑŞã ÇáÇäÏßÓ Çí íÖíİ ãäå
// nummber: ÚÏÏ ãÑÇÊ ÊßÑÇÑ
// value: ŞíãÉ
// $job = array_fill(0, 3, "programmer");
// $job = array_fill(0, 3, array("ali", "yousif")); // for multi-dimensional array
// $job = array_fill(0, 3, array_fill(0, 3, "muhammed"); // so for multi-dimensional array 
// echo "<pre>";
// print_r($job);
// echo "</pre>";


// array_sum(array);
// íÊÚÇãá ãÚ ÇäÏíßÓÏ ÇÑÑí æ ÇÓæÓííÊİ ÇÑÑí
// íÊÚÇãá ãÚ ÇäÊíÌÑ İáæÊ æÓÊÑíäß ÇĞÇ ßÇä ÑŞã æÇĞÇ ßÇä ÏÇÎá ÓÊÑíäß ÈÏÇíÉ ÑŞã Ëã íÇÊí äÕ íÚãá ÊÌÇåá ááäÕ íÇÎĞ ÈÏÇíÉ İŞØ
// $num = array("1", "1", "1taymoor", "10am10"); // 13
// echo "<pre>";
// print_r($num);
// echo "</pre>";
// $sum = array_sum($num);
// echo $sum;


// array_rand(array, number)
// ÊÑÌÚ ÇäÏíßÓ ÚäÕÑ Çæ ÚäÇÕÑ ÚÔæÇÆíÇ ãä ÇáãÕİæİÉ
// $names = array ("taymoor","omer", "yousif", "muhammed");
// echo "<pre>";
// print_r($names);
// echo "</pre>";
// $one = array_rand($names, 1); // íÑÌÚ ÇäÏíßÓ æÇÍÏ İŞØ æáíÓ ãÕİæİÉ
// echo "one is: " . $names[$one] . "<br>"; // İíßæä ãÚÑİÉ ŞíãÉ ÇäÏíßÓ ãÑÌÚ åßĞÇ
// $i = 10;
// $group = array_rand($names, 2); // ÇĞÇ ßÇä 2 Çæ ÇßËÑ íÑÌÚ ÇäÏíßÓ Úáì Ôßá ãÕİæİÉ
// for($i = 0; $i < 2; $i++)
// { 
//     echo "group[$i] is " . $names[$group[$i]] . "<br>"; // İíßæä ãÚÑİÉ ŞíãÉ ÇäÏíßÓ ãÑÌÚ åßĞÇ
// }

// * array_unique(array, Sort_type)
// ÊÑÌÚ ãÕİæİÉ áÇÒã ÊÖÚå İí ãÊÛíÑ
// $names = array ("taymoor","omer", "yousif", "omer", "taymoor");
// echo "<pre>";
// print_r($names);
// echo "</pre>";
// $nuiqeNames = array_unique($names);
// echo "<pre>";
// print_r($nuiqeNames);
// echo "</pre>";

// ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙ
// * explode : ÇäİÌÇÑ
// explod(spreater, sting, limit)
// ÊÑÌÚ ãÕİæİÉ
// spreater: ÍÑİ ÇáÊí ÊÈÏÃ ÈÚÏåÇ ŞØÚ
// sting: ÇáäÕ ÇáãÑÇÏ ŞØÚå ÇİÊÑÇÖí ÚÏÏ ÇáŞØÚ
// limit: 0 or possitive(maximam) or negative
// 0: Èßæä ÚäÕÑ æÇÍÏ İí ÇÑÑí
// possitive: ÊÍÏÏ ÚÏÏ ÚäÕÑ
// negative: íÍĞİ ãä ÇÎÑ ÍÓÈ ÚÏÏ
// $name = "taymoor abdeen qasim";
// $sepreaterNames = explode(" ", $name);
// echo "<pre>";
// print_r($sepreaterNames);
// echo "</pre>";

// $names = array (
//     "taymoor abdeen qasim",
//     "yousif mustafa azzawi",
//     "luqman gazi yousif",
//     "ayoub ramith rubaei",
// );

// foreach ( $names as $value)
// {
//     $db[] = explode(" ", $value);
// }

// echo "<pre>";
// print_r($db);
// echo "</pre>";



//  * implode or join : ÊÌãíÚ
// implode(spreater, array) // ÇİÊÑÇÖí ááÓÈÑíÊæÑ åæ äíáá
// join: äİÓ Úãá ÇãÈáæÏ
// $name = array ("taymoor","abdeen", "qasim");
// $myName = implode(" ", $name);
// $myName = join("*", $name);
// echo $myName;


// * str_split(string, length)
// íİÕá äÕ Çáì ŞØÚ ÍÓÈ ÚÏÏ æÇáÈÇŞí íÈŞì æÇİÊÑÇÖí åí 1 ÚÏÏ æÇĞÇ ÚÏÏ ÇßÈÑ ãä Øæá ÇáäÕ íßæä ÚäÕÑ æÇÍÏ İŞØ
// $name = "my name is taymoor";
// echo $name . "<br>";
// $newName = str_split($name, 3);
// echo "<pre>";
// print_r($newName);
// echo "</pre>";

// my name is taymoor
// ÇáäÇÊÌ íßæä:
// Array
// (
//     [0] => my 
//     [1] => nam
//     [2] => e i
//     [3] => s t
//     [4] => aym
//     [5] => oor
// )

// * chunk_split(string, length : ÇİÊÑÇÖí 76 , end: ÔíÁ íÖíİå Çáì ÇÎÑ æÇİÊÑÇÖí ÓØÑ ÌÏíÏ \r\n)
// íİÕá äÕ Çáì ŞØÚ ÍÓÈ ÚÏÏ æÇáÈÇŞí íÈŞì æÇİÊÑÇÖí åí 1 ÚÏÏ
// íÊÍæá Çáì ÓÊÑíäß æáíÓ ãÕİæİÉ
// $name = "my name is taymoor";
// echo $name . "<br>";
// $newName = chunk_split($name, 3, ".");
// print_r($newName);




// * str_replace(search, replace, string or array, count)
// ÍÓÇÓÉ áÍÇáÉ ÍÑæİ
// íãßä ÊÈÚË ÓÊÑíäß Çæ ÇÑÑí æÊÑÌÚ äÕ
// $name = "c++ is strong, c# is famous and asp.net is sweet";
// echo $name . "<br>";
// $newName = str_replace("c++", "php", $name);
// echo $newName. "<br>"; // php is easy, php is famous

// // íãßä ÊÈÏá ãÌãæÚÉ ßáãÇÊ ÈßáãÉ æÇÍÏÉ
// $newName = str_replace(array("c++", "c#" , "asp.net"), "php", $name, $c);
// echo $c . "<br>"; //  3 ßáãÇÊ Êã ÊÈÏíáåÇ
// echo $newName. "<br>"; // php is strong, php is famous and php is sweet

//  //íãßä ÊÈÏá ãÌãæÚÉ ßáãÇÊ ÈãÌãæÚÉ ÍÓÈ ÊÑÊíÈ
// // ÇĞÇ ßÇä ÚÏÏ ÚäÇÕÑ İí ÑíÈáíÓ ÇŞá ãä ÓíÑÌ İ ÇİÊÑÇÖíÇ íÖÚ ÇãÈÊí ÓÊÑíß íÚäí äíáá

// $name = "c++ is strong, c++ is all, c# is famous and asp.net is sweet.";
// echo $name . "<br>";
// $newName = str_replace(array("c++", "c#", "asp.net"), array("java", "javaSDK", "php"), $name, $c);
// c++ is strong, c++ is all, c# is famous and asp.net is sweet.  // ŞÈá
// java is strong, java is all, javaSDK is famous and php is sweet. // ÈÚÏ
// echo $newName. "<br>";
// echo $c . "<br>"; // 4 times are changed.

// $newName = str_replace(array("c++", "c#", "asp.net"), array("java","javaSDK"), $name, $c);
// c++ is strong, c++ is all, c# is famous and asp.net is sweet.
// java is strong, java is all, javaSDK is famous and is sweet.
// 4


// $newName = str_replace(array("c++", "c#"), array("java","javaSDK", "php"), $name, $c);
// c++ is strong, c++ is all, c# is famous and asp.net is sweet.
// java is strong, java is all, javaSDK is famous and asp.net is sweet.
// 3


// $newName = str_replace(array("c++", "c#", "asp.net"), array("java"), $name, $c);
// c++ is strong, c++ is all, c# is famous and asp.net is sweet.
// java is strong, java is all, is famous and is sweet.
// 4

// i : case insensitive
// $newName = str_ireplace(array("C++", "C#", "asp.NET"), array("java", "Qt", "PY"), $name, $c);
// c++ is strong, c# is famous and asp.net is sweet
// java is strong, Qt is famous and PY is sweet
// 3

// $newName = str_replace(array("C++", "C#", "asp.NET"), array("java", "Qt", "PY"), $name, $c);
// c++ is strong, c# is famous and asp.net is sweet
// c++ is strong, c# is famous and asp.net is sweet
// 0




// * str_repeat(string, number);
// // íßÑÑ äÕ ÍÓÈ ÚÏÏ ÇáãÚØì  
// $name = "taymoor ";
// $theName = str_repeat($name, 12);
// echo $theName;


// * str_shuffle(string, number);
// // íÚãá ÎÑÈØÉ ááÍÑæİ İí ÇáäÕ  
// $name = "taymoor abdeen"; 
// $newName = str_shuffle($name);
// echo $newName; // toyaneomrbd ea


// * strlen(string)
// // íÍÓÈ ÚÏÏ ÍÑæİ Çæ ÑãæÒ íÚäí íÍÓÈ Øæá ÇáäÕ
// $name = "taymoor";
// $count = strlen($name);
// echo $count; // 7



// * addslashes(string)
// // íÓÊÎÏã ááÍãÇíÉ İí ÇÓÊÎÏÇã Óíäßá Çæ ÏÈá ßæíÔä İí ŞÇÚÏÉ ÈíÇäÇÊ
// // íŞæã ÈÇÖÇİÉ ÓáÇÔ
// $name = "My name is taymoor, I'm computer student";
// $newName = addslashes($name);
// echo $newName;

//* stripslashes(string)
// // íÓÊÎÏã ááÍãÇíÉ İí ÇÓÊÎÏÇã Óíäßá Çæ ÏÈá ßæíÔä İí ŞÇÚÏÉ ÈíÇäÇÊ
// // íŞæã ÈÍĞİ ÓáÇÔ
// $name = "My name is taymoor, I\'m programmer";
// echo $name . "<br>";
// $newName = stripslashes($name);
// echo $newName;
// My name is taymoor, I\'m programmer // ŞÈá
// My name is taymoor, I'm programmer // ÈÚÏ



//* strip_tags(string, allow)
// // allow : ÚäÇÕÑ ÊÓãÍ áåã ÇáÈŞÇÁ İí ÇáäÕ æãÇ íäÍĞİ
// // íÚãá Úáì ÍĞİ ßá ÊÇßÇÊ ÇÊÔ Êí Çã Çá
// $str = "My name is <b>taymoor</b>, and <i>taymoor</i>";
// echo $str;
// echo "<br>";
// $newStr = strip_tags($str, "<i>");
// echo $newStr;




// * str to  *lower | *upper |  *lcfirst | *ucwords

// $str = "my name is Taymoor";
// $low = strtolower($str);
// echo $str . "<br>"; // my name is Taymoor
// echo $low . "<br>"; // my name is taymoor

// $str = "my name is Taymoor";
// $upp = strtoupper($str);
// echo $str . "<br>"; // my name is Taymoor
// echo $upp . "<br>"; // MY NAME IS TAYMOOR

// $str = "My name is Taymoor"; // Çæá ÍÑİ ãä ÓÊÑíäß íÍæáå Çáì áææÇÑ
// $lcFirst = lcfirst($str);
// echo $str . "<br>"; // My name is Taymoor
// echo $lcFirst . "<br>"; // my name is Taymoor

// $str = "my name is Taymoor"; // Çæá ÍÑİ ãä ÓÊÑíäß íÍæáå Çáì ÂÈÇÑ
// $ucFirst = ucfirst($str);
// echo $str . "<br>"; // my name is Taymoor
// echo $ucFirst . "<br>"; // my name is Taymoor

// $str = "my name is Taymoor"; // Çæá ÍÑİ ãä ßá ßáãÉ íÍæáå Çáì ÂÈÇÑ
// $ucWords = ucwords($str);
// echo $str . "<br>"; // my name is Taymoor
// echo $ucWords . "<br>"; // My Name Is Taymoor


//* trim(string, charlist) ÊŞáíã
// rtrem : ãä Çáíãíä İŞØ
// ltrem : ãä ÇáíÓÇÑ İŞØ
// // íŞáã ÇáäÕæÕ ÍÓÈ ÇáÑãæÒ Çæ ÇáÍÑæİ æáÇÒã ÊÈÏÃ ãä ÈÏÇíÉ ÇáäÕ Çæ ãä ÇÎíÑ áÇä áÇ íãßä ÊŞáíã æÓØ ÈÏæä ÊŞáíã ÈÏÇíÉ Çæ äåÇíÉ
// // charlist: ÑãÒ ãÑÇÏ ÍĞİå
// // æÇáÇİÊÑÇÖí :
// \0  null
// \t Tap
// \n newline
// \r carriage return
// \x0b vertical tap
// " " space
// $str = " \t  \t     \n My name is taymoor   " ;
// echo var_dump($str) . "<br>" ; // string(33) " My name is taymoor "
// $newStr1 = trim($str);
// $newStr2 = rtrim($str);
// $newStr3 = ltrim($str);
// echo var_dump($newStr1) . "<br>";
// echo var_dump($newStr2) . "<br>";
// echo var_dump($newStr3) . "<br>";

// $name = "Iam taymoor abdeen";
// echo $name . "<br>";
// $newName = trim($name, "I t enn"); //am taymoor abd
// echo $newName . "<br>";





// * str_word_count(string: req, format: opt, charlist: opt)
// ãÇ íÍÓÈ ÇÓÈíÔÇá ßÇÑßÊÑ ãËá & Çæ ÛíÑå ÇáÇ ÇĞÇ ÊßÊÈå ÈÇá ßÇÑáíÓÊ
// format: 
// 0: return Count as integer, it's defualt
// 1: return Count as indexed array.
// 2: return Count as associative array and keys is posion of string
// charlist : 
// by defualt ãÇßæ ÔíÁ
// ÍÑæİ íÌÈ ßÊÇÈÊåÇ æÈÏæä İÑÇÛ ÈíäåãÇ

// $str = "i love php & javascript + react";
// echo $str . "<br>";
// $count = str_word_count($str);
// echo $count; // 5

// $str = "i love php & javascript + react";
// echo $str . "<br>";
// $count = str_word_count($str, "0", "+");
// echo $count; // 6

// $str = "i love php & javascript + react - java * array";
// echo $str . "<br>";
// $count = str_word_count($str, "0");
// echo $count; // 8

// $str = "i love php & javascript + react - java * array";
// echo $str . "<br>";
// $count = str_word_count($str, 0,"+ - *"); // not logical syntax because space between characters
// echo "with space : " . $count . "<br>"; // 2
// $count = str_word_count($str, 0, "+-*"); 
// echo "without space : " . $count . "<br>"; // 10

// $countIndexedArray = str_word_count($str, 1, "&+");
// echo "<pre>";
// print_r($countIndexedArray);
// echo "<pre>";

// $countAssociativeArray = str_word_count($str, 2);
// echo "<pre>";
// print_r($countAssociativeArray);
// echo "<pre>";



// * parse_str(string: req, array:opt)
// // íÚãá Úáì ÊÌÒÆÉ Çááíäß Çáì ãÊÛíÑÇÊ ĞÇÊ ŞíãÉ Çæ ÇĞÇ ßÊÈ ãÕİæİÉ íäÎÒä İí ÇáãÕİæİÉ ÇÓÓæÓííÊİ ßá ßí íßæä ãÊÛíÑ æãŞÇÈáåÇ Êßæä İÇáíæ
// // ãÇ ÊÑÌÚ ÔíÁ áßä íäİĞ ÇáÇãÑ Úáì ãÊÛíÑ
// $link = "name=taymoor&age=22&job=studnt";
// parse_str($link);
// echo $name . "<br>";
// echo $age . "<br>";

// parse_str($link, $myArray); // íÎÒäåÇ Úáì ãÕİæİÉ ÇÓãåÇ ãÇí ÇÑÑí
// echo $myArray["name"];
// echo "<pre>";
// print_r($myArray);
// echo "<pre>";




// * nl2br: newline to breaktag
// * nl2br(str, type)
// type: 
// true: <br /> self close, it's by defult
// false: <br> not self close
// $str = "My name is taymoor \nand i'm love php";
// $newStr = nl2br($str);
// echo $newStr;



// * strpos(string:req, find:req, offset:opt)
// * stripos(string:req, find:req, offset:opt) i: case insestive
// * strrpos(string:req, find:req, offset:opt) r: from right
// * strripos(string:req, find:req, offset:opt)

// // ãÚÑİÉ ÈæÓíÔä ááßÇÑßÊÑ İí ÇáäÕ
// offset: ÇÈÏÃ ãä åĞÇ ÇáÇäÏíßÓ ÇÈÍË æÇĞÇ ßÇä áÇ íæÌÏ ãÇ íÑÌÚ ÔíÆ
// offset: ÓÇáÈ íİíÏ áãÇ ÇÈÏÃ ãä íãíä ÇÍÓÈ
// $str = "iam love php and it's easy";
// $pos = strpos($str, "php");
// echo $pos;


// * strstr(string:req, search:req, before_search:opt)
// * strchr(string:req, search:req, before_search:opt) elias ÇÓã ÇáãÓÊÚÇÑ ÊÚãá äİÓ ÇáÚãá
// * stristr(string:req, search:req, before_search:opt) i: case in sensitive
// before_search: 
// false: íÌíÈ ÇáßáãÉ æÇááí ÈÚÏåÇ æåæ ÇİÊÑÇÖí 
// true: íÌíÈ ŞÈáåÇ İŞØ ÈÏæä ßáãÉ ÇáãÈÍæË 
// $str = "my name is taymoor abdeen";
// $ch = strstr($str, "is"); // íÌíÈ ÇáäÕ Çááí ÈÍË ÚäåÇ æ ÇáäÕ ÈÚÏåÇ Çáì äåÇíÉ
// echo $ch; // is taymoor abdeen  íÌíÈ ßáãÉ æÇááí ÈÚÏåÇ
// $ch = strstr($str, "is", true); // íÌíÈ ÇáäÕ ÈÚÏåÇ
// echo $ch; // my name íÌíÈ İŞØ



// *strcmp(string1, string2)
// ÊÑÌÚ 
// 0 => ãÊÓÇæíÉ
// + => Çæá ÇßÈÑ ãä ÇáËÇäí æÇáÚÏÏ åæ ÇáİÑŞ
// - => Çæá ÇÕÛÑ ãä ÇáËÇäí æÇáÚÏÏ åæ ÇáİÑŞ
// $str1 = "taymoor";
// $str2 = "taymoorabdeen";
// echo strcmp($str1, $str2); // -6 => íÚäí ÇÕÛÑ ãäå ÈÓÊÉ ÍÑæİ 


// *strncmp(string1, string2, length) n:number
// íÚäí ßã ãä ÇáÍÑæİ íŞÇÑä ãËáÇ 3 åá Çæá ËáÇËÉ ÍÑæİ ãÊÓÇæÈÉ ãä äÕííä 
// $str1 = "taym";
// $str2 = "taymoor";
// echo strncmp($str1, $str2, 3); // 0 => Çæá ÇÑÈÚÉ ÍÑæİ ãÊÓÇæíÊíä ãä äÕííä


// *strrev(string)
// íÚãá äÕ ÈÇáÚßÓ æãÇ ÊÑÌÚ ÔíÁ
// $str = "taymoor";
// echo "normal: " . $str. "<br>"; // normal: taymoor
// echo "reverse: " . strrev($str) . "<br>"; // reverse: roomyat




// * substr(string:req, start:req, length:opt ßã ÍÑİ )
// ÇÓÊÎÑÇÌ ŞØÚÉ ãä ÇáäÕ
// * sub string : äÕ İÑÚí
// $str = "my name is taymoor abdeen";
// $firstName = substr($str, 11); // ãä 11 Çáì ÇÎÑ äÕ
// echo $firstName . "<br>"; // taymoor abdeen
// $firstName = substr($str, 11, 7); // ãä 11 ÌÇÈ 7 ÍÑæİ ãä äÕ 
// echo $firstName . "<br>"; // taymoor
// ÇĞÇ ÈÏÇíÉ ÇßÊÈåÇ ÈÇáÓÇáÈ İíÈÏÃ ãä äåÇíÉ ÍÓÈ ÇáÇäÏíßÓ

// ãä ÚÇÔÑ ÍÑİ ãä äåÇíÉ æÌÇÈ 6 ÍÑæİ Çáì Çáíãíä  
// $firstName = substr($str, -10, 6);  // oor ab
// ãä ÚÇÔÑ ÍÑİ ãä äåÇíÉ æÇØÑÍ ãäå 5 ÍÑæİ ãä ÇÎÑ ÇáäÕ
// $firstName = substr($str, -10, -5); // oor a
// echo $firstName;
  


// * substr_count(string: req, substring: req, start: ãä Çí ÇäÏíßÓ íÈÏÃ - opt, length: Çáì Çí ÇäÏíßÓ - opt)
// ßã ãÑÉ äÕ ãæÌæÏ İí ÏÇÎá äÕ ÇÎÑ
// $names = "taymoor abdeen qasim taymoor and ali yousif";
// ÈÏÃ ãä ÈÏÇíÉ äÕ Çáì ÇÎÑ äÕ æáŞí ÇËäÇä
// $count = substr_count($names, "taymoor"); // by defualt ($names, "taymoor", 0);
// echo $count . "<br>"; // 2

// ÈÏÃ ãä ÈÏÇíÉ 10 Çáì ÇÎÑ äÕ æáŞí æÇÍÏ
// $count = substr_count($names, "taymoor", 10);
// echo $count . "<br>" ; // 1

// ÈÏÃ ãä ÈÏÇíÉ 30 Çáì ÇÎÑ äÕ æãÇ áŞí ÔíÁ
// $count = substr_count($names, "taymoor", 30); // 0

// ÈÏÃ ãä ÇäÏíßÓ 10 Çáì  15 æãÇ áŞí ÔíÁ
// $count = substr_count($names, "abdeen", 7, 6); // 0
// echo $count;

// $count = substr_count($names, "abdeen", 7, 7); // 1
// echo $count;




// * substr_compare(string1, string2, start: req, length: otp, case: ÍÇáÉ ÇáÇÍÑİ İæáÓ íÚäí ÍÓÇÓ æåæ ÇáÇİÊÑÇÖí æ ÊÑæ åæ ÇáÍÇáÉ ÚÏã ÍÓÇÓ  opt)
// start : ÎÇÕ ááÓÊÑíäß Çæá İŞØ
// $str1 = "you are taymoor abdeen qasim";
// $str2 = "Taymoor";
// echo substr_compare("a", "b", 0); // -1 -> "a" less "b"
// echo substr_compare($str1, $str2, 0);// 1 -> "y" greater "t"
// compare the str1(ou are...) with str2(taymoor) => "o" less "t"
// echo substr_compare($str1, $str2, 1);// 1 -> "y" less "t"
// compare the str1(taymoor abdeen ..) with str2(taymoor) => "t" equal "t"
// echo substr_compare($str1, $str2, 8);// 0 -> "y" less "t"

// echo substr_compare($str1, $str2, 1: start from index1 in the str1, 3: compare 3 character, true: mean's case insensetive);
// echo substr_compare($str1, $str2, 1, 3, $true); //  1 => "ou ","Tay"
// echo substr_compare($str1, $str2, 3, 3, $true); // -1 => "are","Tay"

// $str1 = "A"; // 65
// $str2 = "a"; // 96
// echo substr_compare($str1, $str2, 0); // -1

$str1 = "A"; // 65
$str2 = "a"; // 96
echo substr_compare($str1, $str2, 0, strlen($str1) /*ÏÇáÉ ÊÑÌÚ ßã ÍÑİ*/, true); // 0


// ÇÚÌÈäí
// şãåãÇ ßõäÊ ÔÎÕÇğ ÕÇáÍÇğ ÓíÍßã Úáíß ÇáäÇÓ şÈäÇÁÇ Úáì ãÒÇÌåã æÍÇÌÇÊåã

?>